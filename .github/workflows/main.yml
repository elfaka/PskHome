name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Node.js 버전 설정
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    # 3. 의존성 설치  
    - name: Install dependencies
      run: npm install

    # 4. 코드 Lint
    - name: Run lint
      run: npm run lint

    # 5. Docker 이미지 빌드
    - name: Build Docker image
      run: |
        docker build -t psk_docker_image .    # Docker 이미지를 빌드

    # 6. Docker 컨테이너에서 빌드 및 테스트 실행
    - name: Run build and tests in Docker container
      run: |
        # 컨테이너에서 빌드 및 테스트 실행
        docker run --rm -v $(pwd):/app psk_docker_image npm run build
        docker run --rm -v $(pwd):/app psk_docker_image npm test  # 필요하면 테스트 추가

    # 7. Docker 이미지 푸시 (Docker Hub 사용 시)
    - name: Push Docker image to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag psk_docker_image ${{ secrets.DOCKER_USERNAME }}/psk_docker_image:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/psk_docker_image:latest

    # 8. SSH 서버 접근 테스트
    - name: SSH server access test
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/elfaka.kr.pem
        chmod 600 ~/.ssh/elfaka.kr.pem
        ssh-keyscan -p 2222 ssh.elfaka.kr >> ~/.ssh/known_hosts
        ssh -i ~/.ssh/elfaka.kr.pem -p 2222 qkrtjsrb312@ssh.elfaka.kr "echo 'SSH connection successful'"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    # 9. 기존 dist 폴더 삭제 및 새로운 dist 폴더 업로드
    - name: Replace dist folder on server
      run: |
        ssh -i ~/.ssh/elfaka.kr.pem -p 2222 qkrtjsrb312@ssh.elfaka.kr "rm -rf /home/qkrtjsrb312/PskHome/dist"
        scp -P 2222 -i ~/.ssh/elfaka.kr.pem -r ./dist qkrtjsrb312@ssh.elfaka.kr:/home/qkrtjsrb312/PskHome/dist
