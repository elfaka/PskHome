name: Backend Deploy

on:
  push:
    branches:
      - main
    paths:
      - backend/**
      - .github/workflows/be-cd.yaml
      - server/docker-compose-be.yaml
      - server/docker-compose-db.yaml

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Java 21 설치
      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      # 3. Gradle 설치 및 캐싱
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Gradle 빌드
      - name: Build with Gradle
        working-directory: backend
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      # 5. Copy JAR
      - name: Copy JAR
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: backend/build/libs/*.jar, server/
          target: ~/${{ github.event.repository.name }}

      - name: Setup environment variables
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/${{ github.event.repository.name }}/server
            echo "JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}" > .env
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

      # 6. Run Docker
      - name: Update be and db
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/${{ github.event.repository.name }}/server

            docker compose -f docker-compose-be.yaml pull
            docker compose -f docker-compose-db.yaml pull

            export $(cat .env)

            docker compose -f docker-compose-db.yaml up -d --remove-orphans
            docker compose -f docker-compose-be.yaml up -d --remove-orphans

            docker image prune -af

            STATUS=$(docker compose ps -q be | xargs docker inspect -f '{{.State.Status}}')

            if [[ ${STATUS} != "running" ]]; then
              exit 1
            fi
